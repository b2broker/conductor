syntax = "proto3";

package conductor;
option go_package = "/conductor";

import "google/protobuf/empty.proto";

//export PATH=$PATH:$(go env GOPATH)/bin
//protoc -I=/Users/nadezhdachurikova/Projects/conductor/proto/conductor --go_out=/Users/nadezhdachurikova/Projects/conductor/proto/src_out /Users/nadezhdachurikova/Projects/conductor/proto/conductor/conduct.proto


service ConductorService {
  rpc Attach (ResourceRequest) returns (AttachResponse);
  rpc Detach (ResourceRequest) returns (DetachResponse);
  rpc List (google.protobuf.Empty) returns (Resources);
}

message ResourceRequest {
  enum ResourceType {
    METATRADER_4 = 0;
    METATRADER_5 = 1;
  }
  ResourceType resource_type  = 1;
  map<string, string> params = 5;
}

message AttachResponse {
  string error    = 1;
  Channel channel = 2;
}

message DetachResponse {
  string error       = 1;
}

message Channel {
  bytes rpc_queue    = 1;
  bytes pub_exchange = 5;
}

message ResourceStatus {
  Channel channel = 5;
  enum Status {
    STARTING  = 0;
    HEALTHY   = 1;
    UNHEALTHY = 2;
    STOPPED   = 3;
  }
  Status status = 10;
}

message Resources {
  repeated ResourceStatus statuses = 1;
}